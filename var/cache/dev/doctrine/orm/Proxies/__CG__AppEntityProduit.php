<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Produit extends \App\Entity\Produit implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'aspectfinal', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'caracteristique', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'utilisationprevue', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'emballage', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'dureconservation', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'imageproduit', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'produirs', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'etapes'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'aspectfinal', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'caracteristique', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'utilisationprevue', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'emballage', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'dureconservation', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'imageproduit', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'produirs', '' . "\0" . 'App\\Entity\\Produit' . "\0" . 'etapes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Produit $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getAspectfinal(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAspectfinal', []);

        return parent::getAspectfinal();
    }

    /**
     * {@inheritDoc}
     */
    public function setAspectfinal(string $aspectfinal): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAspectfinal', [$aspectfinal]);

        return parent::setAspectfinal($aspectfinal);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaracteristique(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaracteristique', []);

        return parent::getCaracteristique();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaracteristique(string $caracteristique): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaracteristique', [$caracteristique]);

        return parent::setCaracteristique($caracteristique);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtilisationprevue(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtilisationprevue', []);

        return parent::getUtilisationprevue();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtilisationprevue(string $utilisationprevue): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtilisationprevue', [$utilisationprevue]);

        return parent::setUtilisationprevue($utilisationprevue);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmballage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmballage', []);

        return parent::getEmballage();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmballage(?string $emballage): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmballage', [$emballage]);

        return parent::setEmballage($emballage);
    }

    /**
     * {@inheritDoc}
     */
    public function getDureconservation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDureconservation', []);

        return parent::getDureconservation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDureconservation(string $dureconservation): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDureconservation', [$dureconservation]);

        return parent::setDureconservation($dureconservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageproduit(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageproduit', []);

        return parent::getImageproduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageproduit(?string $imageproduit): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageproduit', [$imageproduit]);

        return parent::setImageproduit($imageproduit);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduirs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduirs', []);

        return parent::getProduirs();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduir(\App\Entity\Produir $produir): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduir', [$produir]);

        return parent::addProduir($produir);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduir(\App\Entity\Produir $produir): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduir', [$produir]);

        return parent::removeProduir($produir);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtapes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtapes', []);

        return parent::getEtapes();
    }

    /**
     * {@inheritDoc}
     */
    public function addEtape(\App\Entity\Etape $etape): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEtape', [$etape]);

        return parent::addEtape($etape);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEtape(\App\Entity\Etape $etape): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEtape', [$etape]);

        return parent::removeEtape($etape);
    }

}
